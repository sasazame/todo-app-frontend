name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run type-check

    - name: Run linter
      run: npm run lint

    - name: Run unit tests
      run: npm test
      env:
        NODE_ENV: test

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache Next.js build
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          .next/
          out/
        retention-days: 7

  # E2E tests are temporarily disabled in CI
  # Local E2E test completion is required before PR merge
  # See issue: https://github.com/sasazame/todo-app-frontend/issues/[TODO]
  # e2e-test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: success()
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '18'
  #       cache: 'npm'
  #
  #   - name: Cache Playwright binaries
  #     uses: actions/cache@v3
  #     with:
  #       path: |
  #         ~/.cache/ms-playwright
  #       key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
  #       restore-keys: |
  #         ${{ runner.os }}-playwright-
  #
  #   - name: Cache Next.js build
  #     uses: actions/cache@v3
  #     with:
  #       path: |
  #         .next/cache
  #       key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
  #       restore-keys: |
  #         ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
  #
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: build-artifacts
  #       path: ./build-output
  #     continue-on-error: true
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Restore build artifacts or rebuild
  #     run: |
  #       if [ -d "./build-output/.next" ]; then
  #         echo "Using pre-built artifacts"
  #         mv ./build-output/.next ./
  #         if [ -d "./build-output/out" ]; then
  #           mv ./build-output/out ./
  #         fi
  #       else
  #         echo "Build artifacts not found, building locally..."
  #         npm run build
  #       fi
  #       
  #       # Verify build output exists
  #       if [ ! -d ".next" ]; then
  #         echo "Error: .next directory not found after build"
  #         exit 1
  #       fi
  #       
  #       echo "Build verification complete"
  #
  #   - name: Install Playwright Browsers
  #     run: npx playwright install --with-deps chromium
  #
  #   - name: Start application and test
  #     run: |
  #       # Start the application in background
  #       npm run start &
  #       APP_PID=$!
  #       
  #       # Wait for app to be ready
  #       echo "Waiting for app to start..."
  #       for i in {1..30}; do
  #         if curl -f http://localhost:3000 >/dev/null 2>&1; then
  #           echo "App is ready"
  #           break
  #         fi
  #         echo "Waiting... ($i/30)"
  #         sleep 2
  #       done
  #       
  #       # Run tests
  #       npm run test:e2e:ci-smoke
  #       
  #       # Cleanup
  #       kill $APP_PID || true
  #     env:
  #       CI: true
  #       NEXT_PUBLIC_CI: true
  #       NEXT_PUBLIC_API_URL: http://localhost:8080/api/v1
  #
  #   - name: Upload Playwright report
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: playwright-report
  #       path: playwright-report/
  #       retention-days: 30

